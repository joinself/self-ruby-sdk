default:
  image: aldgateventuresbot/ruby-build

stages:
  - Test
  - Build
  - Release
  - Publish

.test: &test |
  bundle install
  bundle exec rake test

.build: &build |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')
  bundle install
  gem build selfsdk.gemspec
  gem install selfsdk-${version}.gem

.setup: &setup |
  apt-get update
  apt-get -y install libsodium-dev
  tmpdir=$(mktemp -d)
  curl https://download.joinself.com/olm/libself-olm_0.1.14_amd64.deb -o ${tmpdir}/libself-olm_0.1.14_amd64.deb
  curl https://download.joinself.com/omemo/libself-omemo_0.1.1_amd64.deb -o ${tmpdir}/libself-omemo_0.1.1_amd64.deb
  apt-get -y install ${tmpdir}/libself-olm_0.1.14_amd64.deb
  apt-get -y install ${tmpdir}/libself-omemo_0.1.1_amd64.deb

.gitRelease: &gitRelease |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')
  currentGitTag=$(git ls-remote -q --tags https://github.com/joinself/self-ruby-sdk | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
  subject=$(git log -n 1 --format=%s)
  body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true

  if [[ -z ${body} ]]; then
    release_notes="- ${subject}"
  else
    release_notes="${body}"
  fi

  if [[ "${version}" != "${currentGitTag}" ]]; then
    git remote set-url origin https://github.com/joinself/${CI_PROJECT_NAME}
    git tag -a ${version} -m "${version}"
    git push origin ${version}
    hub release create -m "${version}" -m "${release_notes}" ${version}
  else
    echo "Version hasn't changed. Nothing to do here."
  fi

.slackNotify: &slackNotify |
  if [[ -z ${body} ]]; then
    slack chat send "New release <https://github.com/joinself/${CI_PROJECT_NAME}|${CI_PROJECT_NAME}> <https://github.com/joinself/${CI_PROJECT_NAME}/commits/${version}|${version}>\n\n- ${subject}" '#ci'
  else
    slack chat send "New release <https://github.com/joinself/${CI_PROJECT_NAME}|${CI_PROJECT_NAME}> <https://github.com/joinself/${CI_PROJECT_NAME}/commits/${version}|${version}>\n\n${body}" '#ci'
  fi

.publish: &publish |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')

  if ! gem search -a selfsdk | grep $version; then
    gem push selfsdk-${version}.gem
  else
    echo "Gem version already exists. Nothing to do here."
  fi

before_script:
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

test:
  stage: Test
  script:
    - *setup
    - *test
  only:
    - branches

build:
  stage: Build
  script:
    - *setup
    - *build
  artifacts:
    paths:
      - ./*.gem
  only:
    - branches

release:
  stage: Release
  image: aldgateventuresbot/deploy
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *gitRelease
    - *slackNotify
  only:
    - master

rubyGems:
  stage: Publish
  script:
    - ${SCRIPTS_DIR}/rubygems-setup
    - *publish
  only:
    - master
