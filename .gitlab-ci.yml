workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

stages:
  - prebuild
  - build
  - release
  - publish

.license-check: &license-check |
  git clone https://${GITHUB_TOKEN}:@github.com/aldgate-ventures/license-finder.git
  source ~/.profile
  bundler_version=$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1 | sed 's/ //g')
  gem install bundler:${bundler_version}
  bundle install
  license_finder --decisions_file ./license-finder/dependency_decisions.yml

.unit-test: &unit-test |
  bundle install
  bundle exec rake test

.build: &build |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')
  bundle install
  gem build selfsdk.gemspec
  gem install selfsdk-${version}.gem

.setup-environment: &setup-environment |
  cwd=$(pwd)
  apt-get update
  apt-get -y install libsodium-dev cmake build-essential
  tmpdir=$(mktemp -d)
  curl https://download.joinself.com/olm/libself-olm_0.1.17_amd64.deb -o ${tmpdir}/libself-olm_0.1.17_amd64.deb
  curl https://download.joinself.com/omemo/libself-omemo_0.1.3_amd64.deb -o ${tmpdir}/libself-omemo_0.1.3_amd64.deb
  apt-get -y install ${tmpdir}/libself-olm_0.1.17_amd64.deb
  apt-get -y install ${tmpdir}/libself-omemo_0.1.3_amd64.deb
  cd ${tmpdir} && git clone https://github.com/google/flatbuffers.git
  cd ${tmpdir}/flatbuffers && git checkout v2.0.0 && cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release && make install
  cd ${cwd}

.git-release: &git-release |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')
  current_git_tag=$(git ls-remote -q --tags https://github.com/joinself/self-ruby-sdk | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
  subject=$(git log -n 1 --format=%s)
  body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true

  if [[ -z ${body} ]]; then
    release_notes="- ${subject}"
  else
    release_notes="${body}"
  fi

  if [[ "${version}" != "${current_git_tag}" ]]; then
    git remote set-url origin https://github.com/joinself/${CI_PROJECT_NAME}
    git tag -a ${version} -m "${version}"
    git push origin ${version}
    gh release create "${version}" --notes "${release_notes}"
  else
    echo "Version hasn't changed. Nothing to do here."
  fi

.publish: &publish |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')

  if ! gem search -a selfsdk | grep $version; then
    gem push selfsdk-${version}.gem
    ${SCRIPTS_DIR}/slack-release-notification -n joinself -v ${version}
  else
    echo "Gem version already exists. Nothing to do here."
  fi

before_script:
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

license-check:
  stage: prebuild
  image: licensefinder/license_finder
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *setup-environment
    - *license-check

secrets-check:
  stage: prebuild
  image: docker:stable-git
  services:
    - docker:20.10.12-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - ${SCRIPTS_DIR}/git-secrets

unit-test:
  stage: prebuild
  image: ruby:2.6.6-buster
  script:
    - *setup-environment
    - *unit-test

build:
  stage: build
  image: ruby:2.6.6-buster
  script:
    - *setup-environment
    - *build
  artifacts:
    paths:
      - ./*.gem

release:
  stage: release
  image: eu.gcr.io/principal-oxide-204416/tools
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *git-release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

rubyGems:
  stage: publish
  image: ruby:2.6.6-buster
  script:
    - ${SCRIPTS_DIR}/rubygems-setup
    - *publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
